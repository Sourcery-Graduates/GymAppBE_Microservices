version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: gym_app_db
      POSTGRES_USER: gym_app_user
      POSTGRES_PASSWORD: gym_app_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_gym_app_data:/var/lib/postgresql/data
      - ./database/exercises_data:/var/lib/postgresql/import-data
      - ./database/init-multiple-databases.sql:/docker-entrypoint-initdb.d/init-multiple-databases.sql
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin_pass
    ports:
      - "8000:80"
    networks:
      - app-network
    depends_on:
      - postgres

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    platform: linux/amd64
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - app-network


  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    platform: linux/amd64
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LOG4J_LOGGERS: >
        kafka.controller=WARN,
        kafka.producer.async.DefaultEventHandler=WARN,
        state.change.logger=WARN,
        kafka.server.KafkaApis=WARN,
        kafka.network.RequestChannel$=ERROR,
        kafka.request.logger=WARN,
        kafka.coordinator.group=WARN,
        kafka.log.LogCleaner=WARN
    depends_on:
      - zoo1
    networks:
      - app-network

volumes:
  postgres_gym_app_data:

networks:
  app-network:
    driver: bridge
