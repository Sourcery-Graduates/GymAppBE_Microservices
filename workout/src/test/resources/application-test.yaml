spring:
  cloud:
    config:
      enabled: false

  datasource:
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
    url: jdbc:tc:postgresql:14:///test
    username: test
    password: test

  config:
    activate:
      on-profile: test
    import: optional:application-test.yaml
  servlet:
    multipart:
      max-file-size: 1048576
      max-request-size: 1048576

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
    label-filter: "!exclude-test"

  mail:
    username: "testMailUsername@mail.com"

  kafka:
    replicas: 1
    partitions: 1
    aggregation:
      like-notification:
        interval-minutes: 2
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.UUIDDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: gym-app-listener-group
      auto-offset-reset: latest
    producer:
      key-serializer: org.apache.kafka.common.serialization.UUIDSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    topics:
      account-register: "userProfile.create-account"
      likes-events: "workout.like-events"
      likes-notifications: "userProfile.notifications-likes-dislikes"
      email-send: "email.send-email"
      email-retry: "email.email-retry"

      dead-letter: "common.DLT"
    streams:
      auto-startup: false
      application-id: gym-app-test-streams
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$UUIDSerde
        default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde


aws:
  s3:
    access:
      key: "test-key"
    secret:
      key: "test-key"
    region: "test-region"
    bucket: "test-bucket"

frontend:
  base_url: "http://localhost:3000"
  registration_verification_path: "/registerVerification?token="
  password_reset_path: "/passwordReset?token="

google:
  client-id: "GOOGLE_OAUTH2_CLIENT_ID"
  client-secret: "GOOGLE_OAUTH2_CLIENT_SECRET"
